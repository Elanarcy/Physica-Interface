{"ast":null,"code":"import { SupportedChainId } from 'constants/chains';\nconst DEFAULT_NETWORKS = [SupportedChainId.PLANQ];\nexport function constructSameAddressMap(address) {\n  let additionalNetworks = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  return DEFAULT_NETWORKS.concat(additionalNetworks).reduce((memo, chainId) => {\n    memo[chainId] = address;\n    return memo;\n  }, {});\n}","map":{"version":3,"names":["SupportedChainId","DEFAULT_NETWORKS","PLANQ","constructSameAddressMap","address","additionalNetworks","concat","reduce","memo","chainId"],"sources":["/workspace/Physica-Interface/src/utils/constructSameAddressMap.ts"],"sourcesContent":["import { SupportedChainId } from 'constants/chains'\n\nconst DEFAULT_NETWORKS = [SupportedChainId.PLANQ]\n\nexport function constructSameAddressMap<T extends string>(\n  address: T,\n  additionalNetworks: SupportedChainId[] = []\n): { [chainId: number]: T } {\n  return DEFAULT_NETWORKS.concat(additionalNetworks).reduce<{ [chainId: number]: T }>((memo, chainId) => {\n    memo[chainId] = address\n    return memo\n  }, {})\n}\n"],"mappings":"AAAA,SAASA,gBAAgB,QAAQ,kBAAkB;AAEnD,MAAMC,gBAAgB,GAAG,CAACD,gBAAgB,CAACE,KAAK,CAAC;AAEjD,OAAO,SAASC,uBAAuB,CACrCC,OAAU,EAEgB;EAAA,IAD1BC,kBAAsC,uEAAG,EAAE;EAE3C,OAAOJ,gBAAgB,CAACK,MAAM,CAACD,kBAAkB,CAAC,CAACE,MAAM,CAA2B,CAACC,IAAI,EAAEC,OAAO,KAAK;IACrGD,IAAI,CAACC,OAAO,CAAC,GAAGL,OAAO;IACvB,OAAOI,IAAI;EACb,CAAC,EAAE,CAAC,CAAC,CAAC;AACR"},"metadata":{},"sourceType":"module"}