{"ast":null,"code":"import { sendAnalyticsEvent } from '@uniswap/analytics';\nimport { WalletConnect } from '@web3-react/walletconnect';\nimport { RPC_URLS } from '../constants/networks';\n\n// Avoid testing for the best URL by only passing a single URL per chain.\n// Otherwise, WC will not initialize until all URLs have been tested (see getBestUrl in web3-react).\nconst RPC_URLS_WITHOUT_FALLBACKS = Object.entries(RPC_URLS).reduce(_c = (map, _ref) => {\n  let [chainId, urls] = _ref;\n  return {\n    ...map,\n    [chainId]: urls[0]\n  };\n}, {});\n_c2 = RPC_URLS_WITHOUT_FALLBACKS;\nexport class WalletConnectPopup extends WalletConnect {\n  constructor(_ref2) {\n    let {\n      actions,\n      onError,\n      qrcode = true\n    } = _ref2;\n    super({\n      actions,\n      options: {\n        qrcode,\n        rpc: RPC_URLS_WITHOUT_FALLBACKS\n      },\n      onError\n    });\n    this.ANALYTICS_EVENT = 'Wallet Connect QR Scan';\n  }\n  activate(chainId) {\n    sendAnalyticsEvent(this.ANALYTICS_EVENT);\n    return super.activate(chainId);\n  }\n}\n\n// Custom class for Uniswap Wallet specific functionality\nvar _c, _c2;\n$RefreshReg$(_c, \"RPC_URLS_WITHOUT_FALLBACKS$Object.entries(RPC_URLS).reduce\");\n$RefreshReg$(_c2, \"RPC_URLS_WITHOUT_FALLBACKS\");","map":{"version":3,"names":["sendAnalyticsEvent","WalletConnect","RPC_URLS","RPC_URLS_WITHOUT_FALLBACKS","Object","entries","reduce","map","chainId","urls","WalletConnectPopup","constructor","actions","onError","qrcode","options","rpc","ANALYTICS_EVENT","activate"],"sources":["/workspace/Physica-Interface/src/connection/WalletConnect.ts"],"sourcesContent":["import { sendAnalyticsEvent } from '@uniswap/analytics'\nimport { URI_AVAILABLE, WalletConnect, WalletConnectConstructorArgs } from '@web3-react/walletconnect'\nimport { isIOS } from 'utils/userAgent'\n\nimport { RPC_URLS } from '../constants/networks'\n\n// Avoid testing for the best URL by only passing a single URL per chain.\n// Otherwise, WC will not initialize until all URLs have been tested (see getBestUrl in web3-react).\nconst RPC_URLS_WITHOUT_FALLBACKS = Object.entries(RPC_URLS).reduce(\n  (map, [chainId, urls]) => ({\n    ...map,\n    [chainId]: urls[0],\n  }),\n  {},\n)\n\nexport class WalletConnectPopup extends WalletConnect {\n  ANALYTICS_EVENT = 'Wallet Connect QR Scan'\n  constructor({\n    actions,\n    onError,\n    qrcode = true,\n  }: Omit<WalletConnectConstructorArgs, 'options'> & { qrcode?: boolean }) {\n    super({ actions, options: { qrcode, rpc: RPC_URLS_WITHOUT_FALLBACKS }, onError })\n  }\n\n  activate(chainId?: number) {\n    sendAnalyticsEvent(this.ANALYTICS_EVENT)\n    return super.activate(chainId)\n  }\n}\n\n// Custom class for Uniswap Wallet specific functionality\n"],"mappings":"AAAA,SAASA,kBAAkB,QAAQ,oBAAoB;AACvD,SAAwBC,aAAa,QAAsC,2BAA2B;AAGtG,SAASC,QAAQ,QAAQ,uBAAuB;;AAEhD;AACA;AACA,MAAMC,0BAA0B,GAAGC,MAAM,CAACC,OAAO,CAACH,QAAQ,CAAC,CAACI,MAAM,MAChE,CAACC,GAAG;EAAA,IAAE,CAACC,OAAO,EAAEC,IAAI,CAAC;EAAA,OAAM;IACzB,GAAGF,GAAG;IACN,CAACC,OAAO,GAAGC,IAAI,CAAC,CAAC;EACnB,CAAC;AAAA,CAAC,EACF,CAAC,CAAC,CACH;AAAA,MANKN,0BAA0B;AAQhC,OAAO,MAAMO,kBAAkB,SAAST,aAAa,CAAC;EAEpDU,WAAW,QAI8D;IAAA,IAJ7D;MACVC,OAAO;MACPC,OAAO;MACPC,MAAM,GAAG;IAC2D,CAAC;IACrE,KAAK,CAAC;MAAEF,OAAO;MAAEG,OAAO,EAAE;QAAED,MAAM;QAAEE,GAAG,EAAEb;MAA2B,CAAC;MAAEU;IAAQ,CAAC,CAAC;IAAA,KANnFI,eAAe,GAAG,wBAAwB;EAO1C;EAEAC,QAAQ,CAACV,OAAgB,EAAE;IACzBR,kBAAkB,CAAC,IAAI,CAACiB,eAAe,CAAC;IACxC,OAAO,KAAK,CAACC,QAAQ,CAACV,OAAO,CAAC;EAChC;AACF;;AAEA;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module"}